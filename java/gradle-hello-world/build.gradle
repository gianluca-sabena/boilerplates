/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.1.1/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:4.0.1'
    }
}

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    // Java code formatter
    id 'com.github.sherter.google-java-format' version '0.8'
}
// old method for plugin https://stackoverflow.com/questions/32352816/what-the-difference-in-applying-gradle-plugin
apply plugin: 'org.owasp.dependencycheck'

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
  // This dependency is found on compile classpath of this component and consumers.
  implementation 'com.google.guava:guava:26.0-jre'

  // Use JUnit test framework
  // testImplementation 'junit:junit:4.12'
  
  // Junit 5
	testCompile('org.junit.jupiter:junit-jupiter-api:5.3.2')
	testCompile('org.junit.jupiter:junit-jupiter-params:5.3.2')
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.2')   
}

// Modify java jar task to include dependencies
// https://www.baeldung.com/gradle-fat-jar
jar {
    manifest {
        attributes "Main-Class": "com.boilerplates.App"
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// Junit5
test {
	useJUnitPlatform()
  // always run full test suite
  outputs.upToDateWhen {false}
	testLogging {
    //events 'passed', 'failed', 'skipped', 'started', 'standard_out', 'standard_error'
		events "passed", "skipped", "failed"
	}
  // only run this tests
  filter {
    includeTestsMatching "com.*"
  }
  // afterSuite { desc, result ->
  //     if (!desc.parent) {
  //         println "\nTest result: ${result.resultType}"
  //         println "Test summary: ${result.testCount} tests, " +
  //                 "${result.successfulTestCount} succeeded, " +
  //                 "${result.failedTestCount} failed, " +
  //                 "${result.skippedTestCount} skipped"
  //     }
  // }
}

// Define the main class for the application
mainClassName = 'com.boilerplates.App'
