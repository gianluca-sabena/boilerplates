FROM centos:centos7

#
# --- Set env variables ---
#
ENV LC_ALL="en_US.UTF-8"
ENV LANG="en_US.UTF-8"
ENV TZ="Europe/Rome"

#
# --- Add user and and allow random uid ---
#
ENV APP_ROOT="/opt/app"
ENV USER_NAME="app"
ENV USER_UID="10001"
ENV PATH="${APP_ROOT}/bin:$PATH"
COPY docker/bin/ ${APP_ROOT}/bin/
# allow to run random user id (openshift compatibility)
RUN useradd -l -u ${USER_UID} -r -g 0 -d ${APP_ROOT} -s /sbin/nologin -c "${USER_NAME} user" ${USER_NAME} && \
    chmod -R u+x ${APP_ROOT}/bin && \
    chgrp -R 0 ${APP_ROOT} && \
    chmod -R g=u ${APP_ROOT} /etc/passwd

#
# --- Pyenv and pipenv ---
#
ENV PY_VERSION="3.7.2"
ENV PYENV_ROOT="${APP_ROOT}/pyenv"
# add shim to path, this avoid running pyenv init -
ENV PATH="${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:$PATH"
# install env in project with
ENV PIPENV_VENV_IN_PROJECT=true
RUN rpmkeys --import file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 && \
    yum install -y  gcc gcc-c++ make git patch openssl-devel zlib-devel readline-devel sqlite-devel bzip2-devel libffi-devel which && \
    git clone --branch v1.2.13 git://github.com/yyuu/pyenv.git ${PYENV_ROOT} && \
    pyenv install "$PY_VERSION" && \
    pyenv global ${PY_VERSION} && \
    pip install --upgrade pip && \
    pip install pipenv && \
    pyenv rehash && \
    yum remove -y gcc gcc-c++ make patch openssl-devel zlib-devel readline-devel sqlite-devel bzip2-devel  && \
    yum clean all 

#
# --- Install uwsgi with pip (guarantee pyenv compatiblity) ---
#
RUN rpmkeys --import file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 && \
    yum install -y  gcc gcc-c++ make  && \
    pip install uwsgi
#
# --- Copy app source ---
#
COPY Pipfile ${APP_ROOT}/Pipfile
RUN cd ${APP_ROOT} && \
    pipenv  install --skip-lock 
COPY src ${APP_ROOT}/src
COPY web ${APP_ROOT}/web
COPY docker/config ${APP_ROOT}/config

#
# --- Final ---
#
# Containers should NOT run as root as a good practice
USER ${USER_UID}
WORKDIR ${APP_ROOT}

#CMD entrypoint pipenv run python -u src/main.py
CMD uwsgi --socket 0.0.0.0:5000 --protocol=http --virtualenv /opt/app/.venv/ --chdir /opt/app/web  -w wsgi:app

# Docker:
# - build: docker build -t centos-pyenv-flask -f Dockerfile.centos .
# - run:   docker run -ti -p 5000:5000 --user 12345 centos-pyenv-flask
# - test:  curl 127.0.0.1:5000